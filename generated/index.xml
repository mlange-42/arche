<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arche â€“ </title>
    <link>https://mlange-42.github.io/arche/generated/</link>
    <description>Recent content on Arche</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="https://mlange-42.github.io/arche/generated/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title></title>
      <link>https://mlange-42.github.io/arche/generated/_benchmarks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlange-42.github.io/arche/generated/_benchmarks/</guid>
      <description>
        
        
        &lt;p&gt;Last run: Tue, 01 Apr 2025 08:46:24 UTC&lt;br&gt;
Version: Arche v0.15.3&lt;br&gt;
CPU: AMD EPYC 7763 64-Core Processor&lt;/p&gt;
&lt;h2&gt;Query&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;query&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#query&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Operation&lt;/th&gt;
          &lt;th style=&#34;text-align: right&#34;&gt;Time&lt;/th&gt;
          &lt;th&gt;Remark&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Query.Next&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;1.0 ns&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Query.Next + 1x Query.Get&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;1.7 ns&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Query.Next + 2x Query.Get&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;1.9 ns&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Query.Next + 5x Query.Get&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;4.5 ns&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Query.Next + Query.Entity&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;1.7 ns&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Query.Next + Query.Relation&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;2.3 ns&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Query.EntityAt, 1 arch&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;12.0 ns&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Query.EntityAt, 1 arch&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;3.2 ns&lt;/td&gt;
          &lt;td&gt;registered filter&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Query.EntityAt, 5 arch&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;30.8 ns&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Query.EntityAt, 5 arch&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;5.0 ns&lt;/td&gt;
          &lt;td&gt;registered filter&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.Query&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;30.5 ns&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.Query&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;34.9 ns&lt;/td&gt;
          &lt;td&gt;registered filter&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;World access&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;world-access&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#world-access&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Operation&lt;/th&gt;
          &lt;th style=&#34;text-align: right&#34;&gt;Time&lt;/th&gt;
          &lt;th&gt;Remark&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;World.Get&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;2.1 ns&lt;/td&gt;
          &lt;td&gt;random, 1000 entities&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.GetUnchecked&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;1.5 ns&lt;/td&gt;
          &lt;td&gt;random, 1000 entities&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.Has&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;1.2 ns&lt;/td&gt;
          &lt;td&gt;random, 1000 entities&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.HasUnchecked&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;0.7 ns&lt;/td&gt;
          &lt;td&gt;random, 1000 entities&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.Alive&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;0.4 ns&lt;/td&gt;
          &lt;td&gt;random, 1000 entities&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.Relations.Get&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;3.4 ns&lt;/td&gt;
          &lt;td&gt;random, 1000 entities&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.Relations.GetUnchecked&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;0.8 ns&lt;/td&gt;
          &lt;td&gt;random, 1000 entities&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Entities&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;entities&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#entities&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Operation&lt;/th&gt;
          &lt;th style=&#34;text-align: right&#34;&gt;Time&lt;/th&gt;
          &lt;th&gt;Remark&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Entity.IsZero&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;0.2 ns&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.NewEntity&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;17.2 ns&lt;/td&gt;
          &lt;td&gt;memory already alloc.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.NewEntity w/ 1 Comp&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;24.1 ns&lt;/td&gt;
          &lt;td&gt;memory already alloc.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.NewEntity w/ 5 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;47.0 ns&lt;/td&gt;
          &lt;td&gt;memory already alloc.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.RemoveEntity&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;16.2 ns&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.RemoveEntity w/ 1 Comp&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;27.7 ns&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.RemoveEntity w/ 5 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;60.5 ns&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Map1.NewWith 1 Comp&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;31.4 ns&lt;/td&gt;
          &lt;td&gt;memory already alloc.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Map5.NewWith 5 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;72.9 ns&lt;/td&gt;
          &lt;td&gt;memory already alloc.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Entities, batched&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;entities-batched&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#entities-batched&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Operation&lt;/th&gt;
          &lt;th style=&#34;text-align: right&#34;&gt;Time&lt;/th&gt;
          &lt;th&gt;Remark&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Batch.New&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;9.6 ns&lt;/td&gt;
          &lt;td&gt;1000, memory already allocated&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Batch.New w/ 1 Comp&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;9.9 ns&lt;/td&gt;
          &lt;td&gt;1000, memory already allocated&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Batch.New w/ 5 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;9.7 ns&lt;/td&gt;
          &lt;td&gt;1000, memory already allocated&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Batch.RemoveEntities&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;7.1 ns&lt;/td&gt;
          &lt;td&gt;1000&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Batch.RemoveEntities w/ 1 Comp&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;7.6 ns&lt;/td&gt;
          &lt;td&gt;1000&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Batch.RemoveEntities w/ 5 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;8.7 ns&lt;/td&gt;
          &lt;td&gt;1000&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Components&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;components&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#components&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Operation&lt;/th&gt;
          &lt;th style=&#34;text-align: right&#34;&gt;Time&lt;/th&gt;
          &lt;th&gt;Remark&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;World.Add 1 Comp&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;41.4 ns&lt;/td&gt;
          &lt;td&gt;memory already alloc.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.Add 5 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;71.6 ns&lt;/td&gt;
          &lt;td&gt;memory already alloc.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.Add 1 to 5 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;114.0 ns&lt;/td&gt;
          &lt;td&gt;memory already alloc.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.Remove 1 Comp&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;50.9 ns&lt;/td&gt;
          &lt;td&gt;memory already alloc.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.Remove 5 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;110.1 ns&lt;/td&gt;
          &lt;td&gt;memory already alloc.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.Remove 1 of 5 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;107.3 ns&lt;/td&gt;
          &lt;td&gt;memory already alloc.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.Exchange 1 Comp&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;59.1 ns&lt;/td&gt;
          &lt;td&gt;memory already alloc.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.Exchange 1 of 5 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;112.6 ns&lt;/td&gt;
          &lt;td&gt;memory already alloc.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Map1.Assign 1 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;48.1 ns&lt;/td&gt;
          &lt;td&gt;memory already alloc.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Map5.Assign 5 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;97.7 ns&lt;/td&gt;
          &lt;td&gt;memory already alloc.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Components, batched&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;components-batched&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#components-batched&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Operation&lt;/th&gt;
          &lt;th style=&#34;text-align: right&#34;&gt;Time&lt;/th&gt;
          &lt;th&gt;Remark&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Batch.Add 1 Comp&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;4.3 ns&lt;/td&gt;
          &lt;td&gt;1000, memory already allocated&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Batch.Add 5 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;4.4 ns&lt;/td&gt;
          &lt;td&gt;1000, memory already allocated&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Batch.Add 1 to 5 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;7.9 ns&lt;/td&gt;
          &lt;td&gt;1000, memory already allocated&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Batch.Remove 1 Comp&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;4.5 ns&lt;/td&gt;
          &lt;td&gt;1000, memory already allocated&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Batch.Remove 5 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;5.8 ns&lt;/td&gt;
          &lt;td&gt;1000, memory already allocated&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Batch.Remove 1 of 5 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;7.0 ns&lt;/td&gt;
          &lt;td&gt;1000, memory already allocated&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Batch.Exchange 1 Comp&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;4.6 ns&lt;/td&gt;
          &lt;td&gt;1000, memory already allocated&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Batch.Exchange 1 of 5 Comps&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;7.0 ns&lt;/td&gt;
          &lt;td&gt;1000, memory already allocated&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Operation&lt;/th&gt;
          &lt;th style=&#34;text-align: right&#34;&gt;Time&lt;/th&gt;
          &lt;th&gt;Remark&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;ecs.NewWorld&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;6.7 Î¼s&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;World.Reset&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;80.0 ns&lt;/td&gt;
          &lt;td&gt;empty world&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ecs.ComponentID&lt;/td&gt;
          &lt;td style=&#34;text-align: right&#34;&gt;22.1 ns&lt;/td&gt;
          &lt;td&gt;component already registered&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlange-42.github.io/arche/generated/_changelog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlange-42.github.io/arche/generated/_changelog/</guid>
      <description>
        
        
        &lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.15.2...v0.15.3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.15.3]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0153httpsgithubcommlange-42archecomparev0152v0153&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0153httpsgithubcommlange-42archecomparev0152v0153&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Avoids heap allocations in generic &lt;code&gt;MapX&lt;/code&gt; by using arrays for IDs (#478)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Migrates the user guide to the &lt;a href=&#34;https://imfing.github.io/hextra/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hextra&lt;/a&gt; theme (#488, #489)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.15.1...v0.15.2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.15.2]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0152httpsgithubcommlange-42archecomparev0151v0152&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0152httpsgithubcommlange-42archecomparev0151v0152&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Speeds up reset of small archetypes by zeroing memory manually (#475)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.15.0...v0.15.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.15.1]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0151httpsgithubcommlange-42archecomparev0150v0151&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0151httpsgithubcommlange-42archecomparev0150v0151&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Optimizes batch operations (add, remove, exchange) by bulk-copying components (#473)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds benchmarks to the user guide for 1-of-5 components operations (e.g. remove 1 of 5) (#474)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.14.5...v0.15.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.15.0]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0150httpsgithubcommlange-42archecomparev0145v0150&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0150httpsgithubcommlange-42archecomparev0145v0150&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Arche v0.15.0 features optimizations that vastly speed up the creation of huge numbers (millions) of entities.
Namely, all memory is grown exponentially now, rather than linearly.
This also causes a breaking change, as the former &amp;ldquo;capacity increments&amp;rdquo; turned into
just initial capacities.&lt;/p&gt;
&lt;p&gt;Further, the README was revised and the ECS competition benchmarks were extended and moved
to the &lt;a href=&#34;https://github.com/mlange-42/go-ecs-benchmarks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;go-ecs-benchmarks&lt;/a&gt; repository.&lt;/p&gt;
&lt;h3&gt;Breaking changes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;breaking-changes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#breaking-changes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Removes &lt;code&gt;ecs.Config&lt;/code&gt;; the world is configured with initial capacities directly (#467)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds methods &lt;code&gt;Batch.New&lt;/code&gt; and &lt;code&gt;Batch.NewQ&lt;/code&gt; for batch entity creation (#468)&lt;/li&gt;
&lt;li&gt;Deprecates &lt;code&gt;ecs.Component&lt;/code&gt;, as a followup of deprecation of all methods that use it (#470)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-3&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-3&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Optimizes entity creation by an altered growth policy for archetypes, entity list and entity pool (#464, #466, #469)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Rewrites features and benchmarks sections of the README (#462)&lt;/li&gt;
&lt;li&gt;Adds version and CPU information to the &lt;a href=&#34;https://mlange-42.github.io/arche/background/benchmarks/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;benchmarks&lt;/a&gt; in the user guide (#462)&lt;/li&gt;
&lt;li&gt;Removed deprecated methods from the &lt;a href=&#34;https://mlange-42.github.io/arche/background/benchmarks/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;benchmarks&lt;/a&gt; in the user guide (#462)&lt;/li&gt;
&lt;li&gt;Adds world creation and component ID lookup to the &lt;a href=&#34;https://mlange-42.github.io/arche/background/benchmarks/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;benchmarks&lt;/a&gt; in the user guide (#462)&lt;/li&gt;
&lt;li&gt;Uses the new methods &lt;code&gt;Batch.New&lt;/code&gt; and &lt;code&gt;Batch.NewQ&lt;/code&gt; in examples where applicable, instead of &lt;code&gt;Builder&lt;/code&gt; (#470)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Uses mask pointers in all tests and benchmarks (#460)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.14.4...v0.14.5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.14.5]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0145httpsgithubcommlange-42archecomparev0144v0145&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0145httpsgithubcommlange-42archecomparev0144v0145&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-3&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-3&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds notes on entity and component pointer usage to docs and the user guide (#455)&lt;/li&gt;
&lt;li&gt;Improves sub-package documentation for navigation and findability (#457)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.14.3...v0.14.4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.14.4]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0144httpsgithubcommlange-42archecomparev0143v0144&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0144httpsgithubcommlange-42archecomparev0143v0144&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-4&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Optimizes mask to types conversion, speeding up archetype creation by up to 150ns (#453)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.14.2...v0.14.3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.14.3]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0143httpsgithubcommlange-42archecomparev0142v0143&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0143httpsgithubcommlange-42archecomparev0142v0143&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-5&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-5&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Avoids a bitmask heap escape in world component operations (add, remove, exchange, &amp;hellip;), with around 20ns improvement (#452)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.14.1...v0.14.2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.14.2]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0142httpsgithubcommlange-42archecomparev0141v0142&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0142httpsgithubcommlange-42archecomparev0141v0142&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-6&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-6&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Optimizes &lt;code&gt;MapX.Assign&lt;/code&gt; and &lt;code&gt;MapX.NewWith&lt;/code&gt; by use of &lt;code&gt;World.GetUnchecked&lt;/code&gt; (#449)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-4&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fixes method names and ordering in benchmark tables (#448)&lt;/li&gt;
&lt;li&gt;Documents listener notification handling in &lt;code&gt;MapX.NewWith&lt;/code&gt; (#450)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Bugfixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bugfixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bugfixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fixes missing listener notification in &lt;code&gt;MapX.NewWith&lt;/code&gt; when called with a relation target (#450)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.14.0...v0.14.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.14.1]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0141httpsgithubcommlange-42archecomparev0140v0141&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0141httpsgithubcommlange-42archecomparev0140v0141&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds &lt;code&gt;World.NewEntityFn&lt;/code&gt;, &lt;code&gt;World.AddFn&lt;/code&gt; and &lt;code&gt;World.ExchangeFn&lt;/code&gt; that call a callback function before listener notification (#445)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Bugfixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bugfixes-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bugfixes-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fixes generic &lt;code&gt;MapX.Assign&lt;/code&gt; and &lt;code&gt;MapX.NewWith&lt;/code&gt; notifying listeners before setting components (#445, issue #443)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-5&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-5&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Removes references to deprecated methods from the user guide (#447)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Retract version v0.14.0 due to issue #443 and required features (#446)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.13.3...v0.14.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.14.0]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0140httpsgithubcommlange-42archecomparev0133v0140&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0140httpsgithubcommlange-42archecomparev0133v0140&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features-2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features-2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Slow assignment methods like &lt;code&gt;World.Assign&lt;/code&gt; and &lt;code&gt;World.NewEntityWith&lt;/code&gt; are deprecated, in favour of their now faster generic counterparts (#441)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-7&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-7&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Optimizes &lt;code&gt;Map.Set&lt;/code&gt;, &lt;code&gt;MapX.Assign&lt;/code&gt; and &lt;code&gt;MapX.NewWith&lt;/code&gt;, by not using runtime reflection (#440)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-6&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-6&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds benchmarks for &lt;code&gt;World.Assign&lt;/code&gt; and &lt;code&gt;World.NewEntityWith&lt;/code&gt; to the user guide (#438)&lt;/li&gt;
&lt;li&gt;Adds benchmarks for &lt;code&gt;MapX.Assign&lt;/code&gt; and &lt;code&gt;MapX.NewWith&lt;/code&gt; to the user guide (#440)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Bugfixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bugfixes-2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bugfixes-2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Prevents garbage collection of slices and pointers in components added via &lt;code&gt;World.Assign&lt;/code&gt; and similar methods (#438, issue #437)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Known issues&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;known-issues&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#known-issues&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Generic &lt;code&gt;MapX.Assign&lt;/code&gt; and &lt;code&gt;MapX.NewWith&lt;/code&gt; notify listeners before setting components (#443)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.13.2...v0.13.3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.13.3]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0133httpsgithubcommlange-42archecomparev0132v0133&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0133httpsgithubcommlange-42archecomparev0132v0133&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-8&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-8&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Simplifies the archetype graph to use only a single list of neighbors per node, saving a bit of memory (#433)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-7&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-7&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds an example for &lt;code&gt;World.Mask&lt;/code&gt;, showing how to check whether a filter &amp;ldquo;contains&amp;rdquo; an entity (#428)&lt;/li&gt;
&lt;li&gt;Adds the &lt;a href=&#34;https://github.com/mlange-42/beecs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;beecs&lt;/a&gt; implementation of &lt;a href=&#34;https://beehave-model.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BEEHAVE&lt;/a&gt; to the showcase (#429)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.13.1...v0.13.2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.13.2]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0132httpsgithubcommlange-42archecomparev0131v0132&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0132httpsgithubcommlange-42archecomparev0131v0132&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Bugfixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bugfixes-3&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bugfixes-3&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Ensure Assign() copies components before notifying listeners (#426, &lt;a href=&#34;https://github.com/g-getsov&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;g-getsov&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.13.0...v0.13.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.13.1]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0131httpsgithubcommlange-42archecomparev0130v0131&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0131httpsgithubcommlange-42archecomparev0130v0131&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Bugfixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bugfixes-4&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bugfixes-4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fixes dispatch listener bug that did not clear component restriction (#424, &lt;a href=&#34;https://github.com/g-getsov&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;g-getsov&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.12.0...v0.13.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.13.0]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0130httpsgithubcommlange-42archecomparev0120v0130&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0130httpsgithubcommlange-42archecomparev0120v0130&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features-3&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features-3&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds function &lt;code&gt;ResourceTypeID&lt;/code&gt; to register/get a resource ID from a &lt;code&gt;reflect.Type&lt;/code&gt; (#420)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fix component type in examples/base (#419)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.11.0...v0.12.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.12.0]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0120httpsgithubcommlange-42archecomparev0110v0120&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0120httpsgithubcommlange-42archecomparev0110v0120&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features-4&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features-4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds &lt;code&gt;Entity.ID()&lt;/code&gt; and &lt;code&gt;Entity.Generation()&lt;/code&gt; (#408, &lt;a href=&#34;https://github.com/delaneyj&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;delaneyj&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-8&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-8&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds a showcase chapter &amp;ldquo;Made with Arche&amp;rdquo; to the documentation page (#411)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-9&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-9&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Re-arrange struct fields to save memory in a few places (#413)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Bugfixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bugfixes-5&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bugfixes-5&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fix crash caused by extending layouts of an inactive archetype (#416, reported in #415)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;First-time contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;first-time-contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#first-time-contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/delaneyj&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;delaneyj&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.10.1...v0.11.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.11.0]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0110httpsgithubcommlange-42archecomparev0101v0110&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0110httpsgithubcommlange-42archecomparev0101v0110&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Highlights&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;highlights&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#highlights&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Arche now has a dedicated &lt;a href=&#34;https://mlange-42.github.io/arche/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation site&lt;/a&gt;
with a structured user guide and background information.
We hope that this will lower the barrier to entrance significantly.&lt;/p&gt;
&lt;p&gt;Further, Arche got a few new features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Query.EntityAt&lt;/code&gt; was added for random access to query entities.&lt;/li&gt;
&lt;li&gt;Generic filters now support &lt;code&gt;Exclusive&lt;/code&gt;, like ID-based filters.&lt;/li&gt;
&lt;li&gt;Build tag &lt;code&gt;debug&lt;/code&gt; improves error messages in a few places where we rely on standard library panics for performance.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Breaking changes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;breaking-changes-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#breaking-changes-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Renames types in &lt;code&gt;ecs.stats&lt;/code&gt; to follow Go standards.
&lt;code&gt;stats.WorldStats&lt;/code&gt; -&amp;gt; &lt;code&gt;stats.World&lt;/code&gt;, &lt;code&gt;stats.NodeStats&lt;/code&gt; -&amp;gt; &lt;code&gt;stats.Node&lt;/code&gt;, &amp;hellip; (#388)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features-5&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features-5&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds method &lt;code&gt;Query.EntityAt()&lt;/code&gt;, useful for things like random sampling of entities (#358)&lt;/li&gt;
&lt;li&gt;Adds build tag &lt;code&gt;debug&lt;/code&gt; to improve error messages in a few places where we rely on standard library panics for performance (#377)&lt;/li&gt;
&lt;li&gt;Adds method &lt;code&gt;FilterX.Exclusive()&lt;/code&gt; to all generic filters (#381)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-9&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-9&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds a dedicated Arche &lt;a href=&#34;https://mlange-42.github.io/arche/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;User Guide&lt;/a&gt; web site (#380, #382, #383, #384, #385)&lt;/li&gt;
&lt;li&gt;Adds &lt;del&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/blob/main/BENCHMARKS.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BENCHMARKS.md&lt;/a&gt;&lt;/del&gt; &lt;a href=&#34;https://mlange-42.github.io/arche/background/benchmarks/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;benchmarks&lt;/a&gt; for a tabular overview of the runtime cost of typical &lt;em&gt;Arche&lt;/em&gt; ECS operations (#367, #372)&lt;/li&gt;
&lt;li&gt;Link benchmarking code in &lt;code&gt;README.md&lt;/code&gt; and benchmarking tables (#375)&lt;/li&gt;
&lt;li&gt;Documents build tags &lt;code&gt;tiny&lt;/code&gt; and &lt;code&gt;debug&lt;/code&gt; in package docs of &lt;code&gt;ecs&lt;/code&gt; (#377)&lt;/li&gt;
&lt;li&gt;Adds examples to demonstrate the use of non-ECS data structures together with ECS (#379)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Bugfixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bugfixes-6&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bugfixes-6&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Prevents using the same component multiple times in any operations, through panic (#357)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-10&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-10&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Generic filters use &lt;code&gt;Mask&lt;/code&gt; instead of slower &lt;code&gt;MaskFilter&lt;/code&gt; if no components are excluded (#381)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-3&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-3&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Improves error messages for running out of world locks, components or resources, and on unbalanced unlock (#363)&lt;/li&gt;
&lt;li&gt;Adds benchmarks for query creation (#366)&lt;/li&gt;
&lt;li&gt;Upgrade to Go 1.22 in CI (#376)&lt;/li&gt;
&lt;li&gt;Renames directory &lt;code&gt;examples&lt;/code&gt; to &lt;code&gt;_examples&lt;/code&gt; to accommodate changed test coverage behaviour of Go 1.22 (#376)&lt;/li&gt;
&lt;li&gt;In unit tests, error messages of all panics are asserted (#377)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.10.0...v0.10.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.10.1]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0101httpsgithubcommlange-42archecomparev0100v0101&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0101httpsgithubcommlange-42archecomparev0100v0101&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Bugfixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bugfixes-7&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bugfixes-7&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fix IsRelation check to allow for non-struct components, like type aliases (#354)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-4&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Repository &lt;a href=&#34;https://github.com/mlange-42/arche-demo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;arche-demo&lt;/a&gt; provides a &lt;a href=&#34;https://mlange-42.github.io/arche-demo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;live demo&lt;/a&gt;
of several models built with Arche.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.9.0...v0.10.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.10.0]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v0100httpsgithubcommlange-42archecomparev090v0100&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v0100httpsgithubcommlange-42archecomparev090v0100&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Highlights&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;highlights-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#highlights-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Arche supports full world serialization and deserialization, in conjunction with &lt;a href=&#34;https://github.com/mlange-42/arche-serde&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;arche-serde&lt;/a&gt; (#319)&lt;/li&gt;
&lt;li&gt;Supports 256 instead of 128 component types as well as resource types and engine locks (#313)&lt;/li&gt;
&lt;li&gt;Generic API supports up to 12 instead of 8 component types (#324)&lt;/li&gt;
&lt;li&gt;Reworked event system with granular subscription to different event types and components (#333, #334, #335, #337, #340)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Breaking changes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;breaking-changes-2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#breaking-changes-2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MaskTotalBits&lt;/code&gt; changed from 128 to 256 (#313)&lt;/li&gt;
&lt;li&gt;Removes &lt;code&gt;Mask.Lo&lt;/code&gt; and &lt;code&gt;Mask.Hi&lt;/code&gt;, internal mask representation is now private (#313)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Filter.Matches(Mask)&lt;/code&gt; became &lt;code&gt;Filter.Matches(*Mask)&lt;/code&gt;; same for all &lt;code&gt;Filter&lt;/code&gt; implementations (#313)&lt;br&gt;
This change was necessary to get the same performance as before, despite the more heavyweight implementation of the now 256 bits &lt;code&gt;Mask&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Component and resource IDs are now opaque types instead of type aliases for &lt;code&gt;uint8&lt;/code&gt; (#330)&lt;/li&gt;
&lt;li&gt;Restructures &lt;code&gt;EntityEvent&lt;/code&gt; to remove redundant information and better handle relation changes (#333)&lt;/li&gt;
&lt;li&gt;World event listener changed from a simple function to a &lt;code&gt;Listener&lt;/code&gt; interface (#334)&lt;/li&gt;
&lt;li&gt;Removes &lt;code&gt;World.ComponentType(ID)&lt;/code&gt;, use function &lt;code&gt;ComponentInfo(ID)&lt;/code&gt; instead (#341)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features-6&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features-6&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds functions &lt;code&gt;ComponentInfo(*World, ID)&lt;/code&gt; and &lt;code&gt;ResourceType(*World, ResID)&lt;/code&gt; (#315, #318)&lt;/li&gt;
&lt;li&gt;Adds methods &lt;code&gt;World.Ids(Entity)&lt;/code&gt; and &lt;code&gt;Query.Ids()&lt;/code&gt; to get component IDs for an entity (#315, #325)&lt;/li&gt;
&lt;li&gt;Entities support JSON marshalling and unmarshalling (#319)&lt;/li&gt;
&lt;li&gt;The world&amp;rsquo;s entity state can be extracted and re-established via &lt;code&gt;World.DumpEntities()&lt;/code&gt; and &lt;code&gt;World.LoadEntities()&lt;/code&gt; (#319, #326)&lt;/li&gt;
&lt;li&gt;Adds functions &lt;code&gt;ComponentIDs(*World)&lt;/code&gt; and &lt;code&gt;ResourceIDs(*World)&lt;/code&gt; to get all registered IDs (#330)&lt;/li&gt;
&lt;li&gt;Adds methods &lt;code&gt;Mask.And&lt;/code&gt;, &lt;code&gt;Mask.Or&lt;/code&gt; and &lt;code&gt;Mask.Xor&lt;/code&gt; (#335)&lt;/li&gt;
&lt;li&gt;Adds build tag &lt;code&gt;tiny&lt;/code&gt; to restrict to 64 components for an extra bit of performance (#338)&lt;/li&gt;
&lt;li&gt;Adds methods &lt;code&gt;Relations.Exchange()&lt;/code&gt;, &lt;code&gt;Relations.ExchangeBatch()&lt;/code&gt;, &lt;code&gt;Relations.ExchangeBatchQ()&lt;/code&gt; for exchange with relation target (#342)&lt;/li&gt;
&lt;li&gt;Generic API adds &lt;code&gt;Exchange.WithRelation()&lt;/code&gt; and optional target argument for operations with relation target (#342)&lt;/li&gt;
&lt;li&gt;Generic API adds &lt;code&gt;MapX.AddBatch()&lt;/code&gt;, &lt;code&gt;MapX.AddBatchQ()&lt;/code&gt;, &lt;code&gt;MapX.RemoveBatch()&lt;/code&gt;and &lt;code&gt;MapX.RemoveBatchQ()&lt;/code&gt; (#342)&lt;/li&gt;
&lt;li&gt;Generic API adds optional relation target argument to most &lt;code&gt;MapX&lt;/code&gt; methods (#342)&lt;/li&gt;
&lt;li&gt;Generic API adds &lt;code&gt;FilterX.Filter()&lt;/code&gt; to get an &lt;code&gt;ecs.Filter&lt;/code&gt; from a generic one (#342)&lt;/li&gt;
&lt;li&gt;Generic API adds &lt;code&gt;Map.SetRelationBatch()&lt;/code&gt; and &lt;code&gt;Map.SetRelationBatchQ()&lt;/code&gt; (#344)&lt;/li&gt;
&lt;li&gt;All batch operations (except entity creation) return the number of affected entities (#348)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-11&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-11&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Reduces archetype memory footprint by using a dynamically sized slice for storage lookup (#327)&lt;/li&gt;
&lt;li&gt;Reduces event listener overhead through granular subscriptions and elimination of a heap allocation (#333, #334, #335, #337, #340)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-10&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-10&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds an overview to packages &lt;code&gt;ecs&lt;/code&gt; and &lt;code&gt;generic&lt;/code&gt; on how to achieve ECS manipulation operations (#345)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-5&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-5&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Entity generation data type changed from &lt;code&gt;uint16&lt;/code&gt; to &lt;code&gt;uint32&lt;/code&gt; (#317)&lt;/li&gt;
&lt;li&gt;Adds &lt;a href=&#34;https://github.com/unitoftime/ecs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;unitoftime/ecs&lt;/a&gt; to competition benchmarks (#311)&lt;/li&gt;
&lt;li&gt;Adds competition benchmarks for accessing 10 components (#328)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.8.1...v0.9.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.9.0]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v090httpsgithubcommlange-42archecomparev081v090&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v090httpsgithubcommlange-42archecomparev081v090&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Infrastructure&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;infrastructure&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#infrastructure&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Upgraded to Go 1.21 toolchain (#308)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.8.0...v0.8.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.8.1]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v081httpsgithubcommlange-42archecomparev080v081&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v081httpsgithubcommlange-42archecomparev080v081&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-11&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-11&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Emphasize in &lt;code&gt;Entity&lt;/code&gt; and &lt;code&gt;World&lt;/code&gt; docs that entities are intended to be stored and passed by copy, not by pointer (#306)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.7.1...v0.8.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.8.0]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v080httpsgithubcommlange-42archecomparev071v080&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v080httpsgithubcommlange-42archecomparev071v080&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Highlights&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;highlights-2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#highlights-2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Entity relations were added as a first-class feature (#231, #271)&lt;/p&gt;
&lt;p&gt;Relations are used to represent graphs of entities, e.g. hierarchies.
They can be added, removed and queried just like normal components.
The new feature offers ergonomic handling of entity relations,
and provides relation queries with native performance.&lt;/p&gt;
&lt;h3&gt;Breaking changes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;breaking-changes-3&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#breaking-changes-3&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Removed &lt;code&gt;World.Batch&lt;/code&gt; for entity batch creation, use &lt;code&gt;Builder&lt;/code&gt; instead (#239)&lt;/li&gt;
&lt;li&gt;Rework of generic entity creation API, use &lt;code&gt;MapX.New&lt;/code&gt;, &lt;code&gt;MapX.NewWith&lt;/code&gt;, &lt;code&gt;MapX.NewBatch&lt;/code&gt; and &lt;code&gt;MapX.NewQuery&lt;/code&gt; (#239, #252)&lt;/li&gt;
&lt;li&gt;Stats object &lt;code&gt;WorldStats&lt;/code&gt; etc. adapted for new structure of archetypes nested in nodes (#258)&lt;/li&gt;
&lt;li&gt;Removed generic filter method &lt;code&gt;FilterX.Filter&lt;/code&gt; (#271)&lt;/li&gt;
&lt;li&gt;Method &lt;code&gt;Batch.NewQuery&lt;/code&gt; renamed to &lt;code&gt;Batch.NewBatchQ&lt;/code&gt; (#298)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features-7&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features-7&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Relation archetypes are removed when they are empty &lt;em&gt;and&lt;/em&gt; the target entity is dead (#238, #242)&lt;/li&gt;
&lt;li&gt;Support an unlimited number of cached filters, instead of 128 (#245)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WorldStats&lt;/code&gt; contains the number of cached filters (#247)&lt;/li&gt;
&lt;li&gt;Archetypes with entity relations are removed on &lt;code&gt;World.Reset&lt;/code&gt; (#247)&lt;/li&gt;
&lt;li&gt;Capacity increment can be configured separately for relation archetypes (#257)&lt;/li&gt;
&lt;li&gt;Adds methods for faster, unchecked entity relation access (#259)&lt;/li&gt;
&lt;li&gt;Re-introduce &lt;code&gt;World.Batch&lt;/code&gt; for batch-processing of entities (add/remove/exchange) (#264)&lt;/li&gt;
&lt;li&gt;New method &lt;code&gt;Builder.Add&lt;/code&gt; for adding components with a target to entities (#264)&lt;/li&gt;
&lt;li&gt;New method &lt;code&gt;Batch.SetRelation&lt;/code&gt; for batch-setting entity relations (#265)&lt;/li&gt;
&lt;li&gt;New methods &lt;code&gt;Builder.AddQ&lt;/code&gt;, &lt;code&gt;Builder.RemoveQ&lt;/code&gt; etc. to get a query over batch-processed entities (#297)&lt;/li&gt;
&lt;li&gt;Sends an &lt;code&gt;EntityEvent&lt;/code&gt; to the world listener on relation target changes (#265)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-12&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-12&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Reduce memory footprint of archetypes by moving properties to nodes (#237)&lt;/li&gt;
&lt;li&gt;Queries iterate archetype graph nodes in an outer loop, potentially skipping nested relation archetypes (#248)&lt;/li&gt;
&lt;li&gt;Relation archetypes are recycled in archetype graph nodes (#248)&lt;/li&gt;
&lt;li&gt;Already empty archetypes are not zeroed on reset (#248)&lt;/li&gt;
&lt;li&gt;Optimize &lt;code&gt;RelationFilter&lt;/code&gt;: get archetype directly instead of iterating complete node (#251)&lt;/li&gt;
&lt;li&gt;Cached filters use swap-remove when removing an archetype (#253)&lt;/li&gt;
&lt;li&gt;Speed up generic query re-compilation after changing the relation target (#255)&lt;/li&gt;
&lt;li&gt;Speed up archetype and node iteration to be as fast as before the new nested structure (#270, #288)&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Filter cache stores archetype graph nodes instead of archetypes (#276)&lt;/del&gt; (#288)&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;uint32&lt;/code&gt; instead of &lt;code&gt;uintptr&lt;/code&gt; for indices and query iteration counter (#283)&lt;/li&gt;
&lt;li&gt;Cached filters use a map for faster removal of archetypes (#289)&lt;/li&gt;
&lt;li&gt;Speed up iterating through many archetypes by approx. 10% (#301)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-12&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-12&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds an example for creating and querying entity relations (#256)&lt;/li&gt;
&lt;li&gt;Adds a section on entity relations to the &lt;code&gt;ARCHITECTURE.md&lt;/code&gt; document (#256)&lt;/li&gt;
&lt;li&gt;Replace Aos benchmarks plot in README for pointer iteration fix #284 (#285)&lt;/li&gt;
&lt;li&gt;Adds a plot for entity relation benchmarks to ARCHITECTURE.md (#290)&lt;/li&gt;
&lt;li&gt;Adds an outline of the most important types and functions to each sub-package (#295)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-6&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-6&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Remove go-gameengine-ecs from Arche benchmarks (but not from competition!) (#228)&lt;/li&gt;
&lt;li&gt;Reduce memory size of &lt;code&gt;Query&lt;/code&gt; and internal archetype list by 8 bytes (#230)&lt;/li&gt;
&lt;li&gt;Generic filters are locked when registered for caching (#241)&lt;/li&gt;
&lt;li&gt;Adds benchmarks for getting and setting entity relations (#259)&lt;/li&gt;
&lt;li&gt;Arche now has an official logo (#273)&lt;/li&gt;
&lt;li&gt;Use for loop with counter in AoS competition benchmarks, to allow for pointers (#284)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.7.0...v0.7.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.7.1]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v071httpsgithubcommlange-42archecomparev070v071&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v071httpsgithubcommlange-42archecomparev070v071&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-13&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-13&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Tweak/improve example &lt;code&gt;batch_ops&lt;/code&gt; (#222)&lt;/li&gt;
&lt;li&gt;Adds an example for running simulations in parallel (#223)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-7&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-7&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds benchmarks for world component access with shuffled entities (#224)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.6.3...v0.7.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.7.0]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v070httpsgithubcommlange-42archecomparev063v070&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v070httpsgithubcommlange-42archecomparev063v070&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features-8&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features-8&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds method &lt;code&gt;World.ComponentType(ID)&lt;/code&gt; to get the &lt;code&gt;reflect.Type&lt;/code&gt; for component IDs (#215)&lt;/li&gt;
&lt;li&gt;Adds methods &lt;code&gt;World.GetUnchecked&lt;/code&gt; and &lt;code&gt;World.HasUnchecked&lt;/code&gt; as optimized variants for known static entities (#217, #219)&lt;/li&gt;
&lt;li&gt;Adds method &lt;code&gt;MapX.GetUnchecked&lt;/code&gt; to all generic mappers, as equivalent to previous point (#217, #219)&lt;/li&gt;
&lt;li&gt;Adds methods &lt;code&gt;Map.GetUnchecked&lt;/code&gt; and &lt;code&gt;Map.HasUnchecked&lt;/code&gt; to generic &lt;code&gt;Map&lt;/code&gt;, as equivalent to previous points (#217, #219)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-13&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-13&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Optimize &lt;code&gt;World.Alive(Entity)&lt;/code&gt; by only checking the entity generation, but not &lt;code&gt;id == 0&lt;/code&gt; (#220)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Bugfixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bugfixes-8&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bugfixes-8&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;All world methods with an entity as argument panic on a dead/recycled entity; causes 0.5ns slower &lt;code&gt;World.Get(Entity)&lt;/code&gt; (#216)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.6.2...v0.6.3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.6.3]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v063httpsgithubcommlange-42archecomparev062v063&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v063httpsgithubcommlange-42archecomparev062v063&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-14&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-14&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Minor README and docstring tweaks (#211, #213)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-8&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-8&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Use &lt;a href=&#34;https://badge.coveralls.io/github/mlange-42/arche?branch=main&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;coveralls.io&lt;/a&gt; for test coverage, add respective badge (#212)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.6.1...v0.6.2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.6.2]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v062httpsgithubcommlange-42archecomparev061v062&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v062httpsgithubcommlange-42archecomparev061v062&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-14&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-14&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Speed up generating world stats by factor 10, by re-using stats object (#210)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.6.0...v0.6.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.6.1]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v061httpsgithubcommlange-42archecomparev060v061&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v061httpsgithubcommlange-42archecomparev060v061&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-15&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-15&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Extend documentation and benchmarks for &lt;code&gt;Entity&lt;/code&gt; (#201)&lt;/li&gt;
&lt;li&gt;Add a section with links to the Arche tools &lt;a href=&#34;https://github.com/mlange-42/arche-model&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;arche-model&lt;/a&gt; and &lt;a href=&#34;https://github.com/mlange-42/arche-pixel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;arche-pixel&lt;/a&gt; (#202)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.5.1...v0.6.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.6.0]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v060httpsgithubcommlange-42archecomparev051v060&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v060httpsgithubcommlange-42archecomparev051v060&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Arche v0.6.0 features fast batch entity creation and deletion, cached filters, and many internal optimizations.&lt;/p&gt;
&lt;h3&gt;Highlights&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;highlights-3&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#highlights-3&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Batch creation and deletion of entities, with up to 4x and 10x speedup, respectively. Even more when combined with &lt;code&gt;World.Reset()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Cached filters for handling many archetypes and complex queries without slowdown.&lt;/li&gt;
&lt;li&gt;A lot of internal performance optimizations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Breaking changes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;breaking-changes-4&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#breaking-changes-4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Generic mappers do no longer return all components when creating entities or components (#145)&lt;/li&gt;
&lt;li&gt;Resources API moved out of the world, to a helper to get by &lt;code&gt;World.Resources()&lt;/code&gt; (#150)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;World.Reset()&lt;/code&gt; does no longer remove the component change listener (#157)&lt;/li&gt;
&lt;li&gt;Removes methods &lt;code&gt;filter.ALL.Not()&lt;/code&gt; and &lt;code&gt;filter.ANY.Not()&lt;/code&gt;, use &lt;code&gt;NoneOf()&lt;/code&gt; and &lt;code&gt;AnyNot()&lt;/code&gt; instead (#160)&lt;/li&gt;
&lt;li&gt;World listener function takes a pointer to the &lt;code&gt;EntityEvent&lt;/code&gt; instead of a copy as argument (#162)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features-9&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features-9&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds method &lt;code&gt;World.Reset()&lt;/code&gt;, to allow for more efficient systematic simulations (#138)&lt;/li&gt;
&lt;li&gt;Adds &lt;code&gt;World.Batch()&lt;/code&gt; helper for performing optimized batch-creation and batch-removal of entities (#149)&lt;/li&gt;
&lt;li&gt;Adds method &lt;code&gt;Mask.Exclusive()&lt;/code&gt; to create a filter matching an exact component composition (#149, #188)&lt;/li&gt;
&lt;li&gt;Generic mappers (&lt;code&gt;Map1&lt;/code&gt;, &amp;hellip;) have methods &lt;code&gt;NewEntities&lt;/code&gt;, &lt;code&gt;NewEntitiesWith&lt;/code&gt; and &lt;code&gt;RemoveEntities&lt;/code&gt; for batch operations (#151)&lt;/li&gt;
&lt;li&gt;Batch-creation methods (ID-based and generic) have variants like &lt;code&gt;NewEntitiesQuery&lt;/code&gt; that return a query over the created entities (#152)&lt;/li&gt;
&lt;li&gt;Notification during batch-creation is delayed until the resp. query is closed (#157)&lt;/li&gt;
&lt;li&gt;Batch-remove methods (&lt;code&gt;RemoveEntities()&lt;/code&gt;) return the number of removed entities (#173)&lt;/li&gt;
&lt;li&gt;Filters can be cached and tracked by the &lt;code&gt;World&lt;/code&gt; to speed up queries when there are many archetypes (#178)&lt;/li&gt;
&lt;li&gt;Function &lt;code&gt;AddResource[T](*World)&lt;/code&gt; returns the ID of the resource (#183)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-15&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-15&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Speedup of archetype mask checks by 10% by checking mask before empty archetype (#139)&lt;/li&gt;
&lt;li&gt;Speedup of generic queries and mappers to come closer to ID-based access (#144)&lt;/li&gt;
&lt;li&gt;Speedup of archetype mask checks by casting filter interface to concrete type when possible (#148)&lt;/li&gt;
&lt;li&gt;Optimized batch creation of entities (#159)&lt;/li&gt;
&lt;li&gt;More efficiently clear the memory of removed components, with 2-3x speedup (#165)&lt;/li&gt;
&lt;li&gt;Do not clear memory when adding entities to archetypes, not required anymore as of #147 (#165)&lt;/li&gt;
&lt;li&gt;Speed up copying entity to archetype by getting entity pointer without reflection (#166)&lt;/li&gt;
&lt;li&gt;Avoid slice allocations in generic mapper methods (#170)&lt;/li&gt;
&lt;li&gt;Avoid type checks in query when iterating archetypes (#179)&lt;/li&gt;
&lt;li&gt;Speed up counting entities in queries with a cached filter (#182)&lt;/li&gt;
&lt;li&gt;Implements a fast and memory-efficient lookup data structure for components ID keys, to reduce the memory footprint of archetypes and the archetype graph (#192)&lt;/li&gt;
&lt;li&gt;Speedup of archetype creation by 40% by using a &lt;code&gt;const&lt;/code&gt; for archetype storage page sizes (#197)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Bugfixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bugfixes-9&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bugfixes-9&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Archetype storage buffers are &amp;ldquo;zeroed&amp;rdquo; when removing entities, to allow GC on pointers and slices in components (#147)&lt;/li&gt;
&lt;li&gt;Use slices instead of arrays inside paged archetype list to ensure pointer persistence (#184)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-16&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-16&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds an example for batch-creation and batch-removal of entities (#173)&lt;/li&gt;
&lt;li&gt;Adds code examples to most public types, methods and functions (#183, #189)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-9&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-9&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Restructure and extend benchmarks (#146, #153, #155, #156)&lt;/li&gt;
&lt;li&gt;Add an ECS competition benchmark for adding and removing components (#170)&lt;/li&gt;
&lt;li&gt;Add benchmarks for different ways to implement parent-child relations between entities (#194, #195)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.5.0...v0.5.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.5.1]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v051httpsgithubcommlange-42archecomparev050v051&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v051httpsgithubcommlange-42archecomparev050v051&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-16&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-16&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Speedup of archetype access by 5-10% by merging storages into archetypes (#137)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-17&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-17&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Document all private functions, types and methods  (#136)&lt;/li&gt;
&lt;li&gt;Adds a section  and plot on benchmarks against other Go ECS implementations to the README (#138)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-10&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-10&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Internal code refactoring (#136)
&lt;ul&gt;
&lt;li&gt;Move method &lt;code&gt;nextArchetype&lt;/code&gt; from &lt;code&gt;World&lt;/code&gt; to &lt;code&gt;Query&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Remove internal type &lt;code&gt;queryIter&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Move repetitive pointer copying code in &lt;code&gt;storage&lt;/code&gt; into a private method.&lt;/li&gt;
&lt;li&gt;Move repetitive entity creation code in  &lt;code&gt;World&lt;/code&gt; into a private method.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.4.6...v0.5.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.5.0]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v050httpsgithubcommlange-42archecomparev046v050&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v050httpsgithubcommlange-42archecomparev046v050&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Feature release. Does not break v0.4.x projects.&lt;/p&gt;
&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features-10&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features-10&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;The World handles ECS resources, i.e. component-like global data (#132)&lt;/li&gt;
&lt;li&gt;Generic access to world resources (#132)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-18&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-18&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds an example for the use of resources (#132)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.4.5...v0.4.6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.4.6]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v046httpsgithubcommlange-42archecomparev045v046&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v046httpsgithubcommlange-42archecomparev045v046&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-17&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-17&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Speedup archetype access by 10%, by elimination of bounds checks (#126)&lt;/li&gt;
&lt;li&gt;Speedup entity access from queries by 50% by using a component storage for them (#131)&lt;/li&gt;
&lt;li&gt;Minor optimizations of component storage (#128)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-19&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-19&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds an example to demonstrate how to implement classical ECS systems (#129)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.4.4...v0.4.5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.4.5]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v045httpsgithubcommlange-42archecomparev044v045&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v045httpsgithubcommlange-42archecomparev044v045&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features-11&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features-11&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds memory per entity to archetype stats (#124)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-11&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-11&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds benchmarks of Arche vs. Array of Structs (AoS) and Array of Pointers (AoP), for different memory per entity and number of entities (#123)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.4.3...v0.4.4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.4.4]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v044httpsgithubcommlange-42archecomparev043v044&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v044httpsgithubcommlange-42archecomparev043v044&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features-12&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features-12&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Query&lt;/code&gt; has methods &lt;code&gt;Count()&lt;/code&gt; and &lt;code&gt;Step(int)&lt;/code&gt;, primarily for effective random sampling (#119)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-20&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-20&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds example &lt;code&gt;random_sampling&lt;/code&gt; to demonstrate usage of &lt;code&gt;Query.Count()&lt;/code&gt; and &lt;code&gt;Query.Step(int)&lt;/code&gt; (#119)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Bugfixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bugfixes-10&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bugfixes-10&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Query.Next&lt;/code&gt;, &lt;code&gt;Query.Get&lt;/code&gt;, etc. now always panic when called on a closed query (#117)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-12&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-12&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Update to &lt;a href=&#34;https://github.com/marioolofo/go-gameengine-ecs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;go-gameengine-ecs&lt;/a&gt; v0.9.0 in benchmarks (#116)&lt;/li&gt;
&lt;li&gt;Remove internal wrapper structs in generic queries and maps (#120)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.4.2...v0.4.3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.4.3]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v043httpsgithubcommlange-42archecomparev042v043&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v043httpsgithubcommlange-42archecomparev042v043&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Bugfixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bugfixes-11&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bugfixes-11&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;EntityEvent&lt;/code&gt; has more consistent values when an entity is removed (#115)
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;EntityEvent.NewMask&lt;/code&gt; is zero&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EntityEvent.Removed&lt;/code&gt; is contains all former components&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EntityEvent.Current&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.4.1...v0.4.2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.4.2]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v042httpsgithubcommlange-42archecomparev041v042&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v042httpsgithubcommlange-42archecomparev041v042&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-18&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-18&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Avoid creation of unused archetypes by splitting the archetype graph out of the actual archetypes (#113)&lt;/li&gt;
&lt;li&gt;Use slice instead of fixed-size array for type lookup in component registry (#113)&lt;/li&gt;
&lt;li&gt;Avoid copying &lt;code&gt;entityIndex&lt;/code&gt; structs by using pointers (#114)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.4.0...v0.4.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.4.1]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v041httpsgithubcommlange-42archecomparev040v041&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v041httpsgithubcommlange-42archecomparev040v041&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Bugfixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bugfixes-12&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bugfixes-12&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fix units symbol for bytes from &lt;code&gt;b&lt;/code&gt; to &lt;code&gt;B&lt;/code&gt; in string formatting of world statistics (#111)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-13&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-13&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adds &lt;a href=&#34;https://github.com/wfranczyk/ento&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github.com/wfranczyk/ento&lt;/a&gt; to benchmarks (#110)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.3.1...v0.4.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.4.0]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v040httpsgithubcommlange-42archecomparev031v040&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v040httpsgithubcommlange-42archecomparev031v040&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;API revision, split out generics and filters into separate packages.&lt;/p&gt;
&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features-13&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features-13&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Generic queries support optional, additional and excluded components (#53, #56, #58, #59, #60, #63)&lt;/li&gt;
&lt;li&gt;Logic filters for complex queries (#54, #58, #61)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Query&lt;/code&gt; and &lt;code&gt;World&lt;/code&gt; have a method &lt;code&gt;Mask(Entity)&lt;/code&gt; to access archetype masks (#65)&lt;/li&gt;
&lt;li&gt;Generic query &lt;code&gt;Get&lt;/code&gt; method returns all queried components (#83)&lt;/li&gt;
&lt;li&gt;Added method &lt;code&gt;World.Stats()&lt;/code&gt; for inspecting otherwise inaccessible world statistics (#67)&lt;/li&gt;
&lt;li&gt;Entities can be initialized with components, via ID as well as using generics (#76)&lt;/li&gt;
&lt;li&gt;A listener function can be registered to the world, for notification on entity changes (#77)&lt;/li&gt;
&lt;li&gt;Support for up to 128 distinct component types per world (was limited to 64 before) (#78)&lt;/li&gt;
&lt;li&gt;Generic entity manipulation through types &lt;code&gt;Map1&lt;/code&gt;, &lt;code&gt;Map2&lt;/code&gt;, &amp;hellip; and &lt;code&gt;Exchange&lt;/code&gt; (#79, #84, #87)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-19&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-19&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Generic queries are compiled to masks and cached on first build (#62)&lt;/li&gt;
&lt;li&gt;Optimization of adding/removing components, with 2-3x speedup and vast reduction of (number of) allocations (#93)&lt;/li&gt;
&lt;li&gt;Speed up component world access by use of nil pointer check instead of bitmask (#96)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-14&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-14&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Overhaul of the module structure, with generics and filters in separate packages (#55, #57, #61, #64)&lt;/li&gt;
&lt;li&gt;Boilerplate code for generic filters and queries is auto-generated with &lt;code&gt;go generate&lt;/code&gt; (#64)&lt;/li&gt;
&lt;li&gt;Ensure 100% test coverage by adding a CI check for it (#68)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;World.RemEntity(Entity)&lt;/code&gt; is now &lt;code&gt;World.RemoveEntity(Entity)&lt;/code&gt; (#87)&lt;/li&gt;
&lt;li&gt;More examples as user documentation (#83, #95)&lt;/li&gt;
&lt;li&gt;General API cleanup with renaming of several types and methods (#100)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.3.0...v0.3.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.3.1]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v031httpsgithubcommlange-42archecomparev030v031&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v031httpsgithubcommlange-42archecomparev030v031&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-15&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-15&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fix failing &lt;a href=&#34;https://pkg.go.dev&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.go.dev&lt;/a&gt; to fetch Arche version v0.3.0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.2.0...v0.3.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.3.0]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v030httpsgithubcommlange-42archecomparev020v030&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v030httpsgithubcommlange-42archecomparev020v030&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features-14&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features-14&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Added a layer of generic access as alternative for using component IDs, for type safety and ergonomics (#47, #48)
&lt;ul&gt;
&lt;li&gt;Generic queries like &lt;code&gt;Query1[T]&lt;/code&gt;, &lt;code&gt;Query2[T, U]&lt;/code&gt;, &amp;hellip; (#47)&lt;/li&gt;
&lt;li&gt;Generic add, assign and remove (&lt;code&gt;Add[T]()&lt;/code&gt;, &lt;code&gt;Add2[T, U](), ...&lt;/code&gt;) (#47)&lt;/li&gt;
&lt;li&gt;Generic get, has, and set through component mapper &lt;code&gt;Map[T]&lt;/code&gt; (#47)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-20&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-20&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Use of an archetype graph to speed up finding the target archetype for component addition/removal (#42)&lt;/li&gt;
&lt;li&gt;Minor optimization of component access by queries (#50)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-16&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-16&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Reduced dependencies by moving profiling and benchmarking to sub-modules (#46)&lt;/li&gt;
&lt;li&gt;Smaller integer type for component identifiers (#47)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.1.4...v0.2.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.2.0]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v020httpsgithubcommlange-42archecomparev014v020&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v020httpsgithubcommlange-42archecomparev014v020&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features-15&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features-15&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;World&lt;/code&gt; has method &lt;code&gt;Exchange&lt;/code&gt; to add and remove components in one go (#38)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;World&lt;/code&gt; has method &lt;code&gt;Assign&lt;/code&gt; add and assign components in one go (#38)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;World&lt;/code&gt; has method &lt;code&gt;AssignN&lt;/code&gt; add and assign multiple components in one go (#38)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-21&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-21&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Optimization of &lt;code&gt;Query&lt;/code&gt; iteration, avoids allocations and makes it approx. 30% faster (#35)&lt;/li&gt;
&lt;li&gt;Much smaller archetype data structure at the cost of one more index lookup (#37)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-17&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-17&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Removed method &lt;code&gt;Query.Count()&lt;/code&gt;, as it was a by-product of the allocations in the above point (#35)&lt;/li&gt;
&lt;li&gt;Archetypes are stored in a paged collection to use more efficient access by pointers (#36)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.1.3...v0.1.4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.1.4]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v014httpsgithubcommlange-42archecomparev013v014&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v014httpsgithubcommlange-42archecomparev013v014&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Documentation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;documentation-21&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#documentation-21&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Extended and improved documentation (#34)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.1.2...v0.1.3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.1.3]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v013httpsgithubcommlange-42archecomparev012v013&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v013httpsgithubcommlange-42archecomparev012v013&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features-16&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features-16&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;Config&lt;/code&gt; to allow for configuration of the world (currently only storage capacity increment) (#28)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Query&lt;/code&gt; has a method &lt;code&gt;Count()&lt;/code&gt;, reporting the total number of matching entities (#30)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.1.1...v0.1.2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.1.2]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v012httpsgithubcommlange-42archecomparev011v012&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v012httpsgithubcommlange-42archecomparev011v012&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-18&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-18&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Use aligned item size in component storage for faster query iteration (#25)&lt;/li&gt;
&lt;li&gt;Queries lock the World, and automatically unlock it after iteration (#26)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/compare/v0.1.0...v0.1.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.1.1]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v011httpsgithubcommlange-42archecomparev010v011&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v011httpsgithubcommlange-42archecomparev010v011&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Other&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-19&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-19&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Avoid allocation in &lt;code&gt;World.Has(entity, compID)&lt;/code&gt; (#16)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;World.RemEntity(entity)&lt;/code&gt; panics on dead entity, like all other &lt;code&gt;World&lt;/code&gt; methods (#18)&lt;/li&gt;
&lt;li&gt;Reserve zero value &lt;code&gt;Entity&lt;/code&gt; to serve as nil/undefined value (#23)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/mlange-42/arche/tree/v0.1.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[v0.1.0]&lt;/a&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;v010httpsgithubcommlange-42archetreev010&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#v010httpsgithubcommlange-42archetreev010&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Initial release.&lt;/p&gt;
&lt;p&gt;Basic ECS implementation.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
